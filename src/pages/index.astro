---
import Layout from "../layouts/Layout.astro"
import GenGridBlock from "../components/GenGridBlock.astro"
import GenGridHeading from "../components/GenGridHeading.astro"

// Configure your year range
const startYear = 1922
const endYear = 2040 // Extended to show more years
const years = Array.from(
  { length: endYear - startYear + 1 },
  (_, i) => startYear + i,
)

const generations = [
  {
    name: "The Greatest Generation",
    start: 1922,
    end: 1927,
    colorStart: "#A3B9D3", // Pastel Navy Blue
    colorStop: "#B0C4DE", // Lighter Pastel Blue
  },
  {
    name: "The Silent Generation",
    start: 1928,
    end: 1945,
    colorStart: "#C08081", // Pastel Burgundy
    colorStop: "#D3A4A6", // Lighter Pastel Pink
  },
  {
    name: "The Baby Boomers",
    start: 1946,
    end: 1964,
    colorStart: "#A8D5BA", // Pastel Forest Green
    colorStop: "#C1E1C1", // Lighter Pastel Green
  },
  {
    name: "Generation X",
    start: 1965,
    end: 1980,
    colorStart: "#B0C4DE", // Pastel Slate Grey
    colorStop: "#D3D3E3", // Lighter Pastel Grey
  },
  {
    name: "Millennials",
    start: 1981,
    end: 1996,
    colorStart: "#FFDAB9", // Pastel Bright Orange
    colorStop: "#FFE4C4", // Lighter Pastel Peach
  },
  {
    name: "Generation Z",
    start: 1997,
    end: 2012,
    colorStart: "#D1B3FF", // Pastel Electric Purple
    colorStop: "#E6CCFF", // Lighter Pastel Lavender
  },
  {
    name: "Generation Alpha",
    start: 2013,
    end: 2022,
    colorStart: "#B3FFFF", // Pastel Aqua Blue
    colorStop: "#CCFFFF", // Lighter Pastel Cyan
  },
  {
    name: "Generation Beta",
    start: 2023,
    end: 2039,
    colorStart: "#C1E1C1", // Pastel Lime Green
    colorStop: "#D8ECD8", // Lighter Pastel Mint
  },
]
---

<Layout>
  <h1
    class="mb-4 text-4xl font-extrabold leading-none tracking-tight text-foreground md:text-5xl lg:text-6xl"
  >
    They're how old?!
  </h1>
  <div class="relative overflow-x-scroll">
    <div
      class="sticky left-9 top-10 z-10 ml-9 flex h-0 flex-col gap-12 text-left"
    >
      {
        generations
          .map((generation) => (
            <div class="">
              {generation.name}
              <span class="text-xs text-gray-500">
                {generation.start} - {generation.end}
              </span>
            </div>
          ))
          .reverse()
      }
    </div>
    <div class="relative ml-6 grid h-max">
      <div
        class="absolute ml-3 grid h-full w-max text-left"
        style=`grid-template-columns: repeat(${years.length}, minmax(100px, 1fr));`
      >
        {years.map((year) => <GenGridHeading>{year}</GenGridHeading>)}
      </div>

      <div
        class="mt-8 grid w-max"
        style=`grid-template-columns: repeat(${years.length}, minmax(100px, 1fr)); grid-template-rows: repeat(${generations.length}, minmax(20px, 1fr));`
      >
        {
          generations
            .slice()
            .reverse()
            .map((generation, index) => {
              const startColspan = generation.start - startYear
              const genColspan = generation.end - generation.start + 1
              return (
                <GenGridBlock
                  generation={generation}
                  rowStart={index + 1}
                  colStart={startColspan + 1}
                  colSpan={genColspan}
                />
              )
            })
        }
      </div>
    </div>
  </div>
</Layout>
